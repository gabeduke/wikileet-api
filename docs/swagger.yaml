basePath: /api/v1
host: localhost:8080
info:
  contact:
    email: support@leetserve.com
    name: Wikileet Support
    url: http://www.leetserve.com/support
  description: Wikileet gift lists API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wikileet API
  version: "1.0"
paths:
  /items:
    get:
      consumes:
      - application/json
      description: List items by user email.
      parameters:
      - description: search by email address
        format: email
        in: query
        name: user_email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get items
      tags:
      - item
  /items/:id:
    delete:
      consumes:
      - application/json
      description: Delete item by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete item
      tags:
      - item
    get:
      consumes:
      - application/json
      description: Get item by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get item
      tags:
      - item
    patch:
      consumes:
      - application/json
      description: Get item by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update item
      tags:
      - item
  /users:
    get:
      consumes:
      - application/json
      description: List users
      parameters:
      - description: search by email address
        format: email
        in: query
        name: user_email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get users
      tags:
      - user
  /users/:id:
    get:
      consumes:
      - application/json
      description: Get user by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get user
      tags:
      - user
  /workspaces:
    get:
      consumes:
      - application/json
      description: Get all workspaces.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get workspaces
      tags:
      - workspace
    post:
      consumes:
      - application/json
      description: Create a new workspace.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Creat workspace
      tags:
      - workspace
  /workspaces/:id:
    get:
      consumes:
      - application/json
      description: Get workspace by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get workspace
      tags:
      - workspace
  /workspaces/:id/users:
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: associate item with user
        format: email
        in: query
        name: user_email
        type: string
      - description: Username
        format: email
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Creat user
      tags:
      - user
  /workspaces/:id/users/:id/items:
    get:
      consumes:
      - application/json
      description: List items by user email.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get items
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create a new item.
      parameters:
      - description: associate item with user
        format: email
        in: query
        name: user_email
        type: string
      - description: associate item with workspace
        format: email
        in: query
        name: workspace
        type: string
      - description: Item name
        format: email
        in: query
        name: name
        type: string
      - description: Item description
        format: email
        in: query
        name: description
        type: string
      - description: Item help URL
        format: email
        in: query
        name: url
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create item
      tags:
      - item
securityDefinitions:
  OAuth2Application:
    flow: application
    scopes:
      https://www.googleapis.com/auth/userinfo.email: "\tSee your primary Google Account
        email address"
    tokenUrl: https://oauth2.googleapis.com/token
    type: oauth2
swagger: "2.0"
