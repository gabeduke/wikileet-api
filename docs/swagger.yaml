basePath: /api/v1
definitions:
  app.Item:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      url:
        type: string
      user_id:
        type: integer
      workspace_id:
        type: integer
    type: object
  app.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/app.Item'
        type: array
      name:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      workspaces:
        items:
          $ref: '#/definitions/app.Workspace'
        type: array
    required:
    - email
    type: object
  app.Workspace:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      users:
        items:
          $ref: '#/definitions/app.User'
        type: array
    type: object
  app.createItemInput:
    properties:
      description:
        type: string
      name:
        type: string
      url:
        type: string
      user_email:
        type: string
      workspace:
        type: string
    required:
    - name
    - user_email
    type: object
  app.createUserInput:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  app.createWorkspaceInput:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  app.updateItemInput:
    properties:
      description:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@leetserve.com
    name: Wikileet Support
    url: http://www.leetserve.com/support
  description: Wikileet gift lists API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Wikileet API
  version: "1.0"
paths:
  /items:
    get:
      consumes:
      - application/json
      description: List items by user email.
      parameters:
      - description: search by email address
        format: email
        in: query
        name: user_email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get items
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create a new item.
      parameters:
      - description: associate item with user
        format: email
        in: query
        name: user_email
        type: string
      - description: Item data
        in: body
        name: data
        schema:
          $ref: '#/definitions/app.createItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Item'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create item
      tags:
      - item
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: Delete item by id.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete item
      tags:
      - item
    get:
      consumes:
      - application/json
      description: Get item by id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Item'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get item
      tags:
      - item
    patch:
      consumes:
      - application/json
      description: Get item by id.
      parameters:
      - description: Item data
        in: body
        name: data
        schema:
          $ref: '#/definitions/app.updateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Item'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update item
      tags:
      - item
  /profile:
    get:
      consumes:
      - application/json
      description: Get logged-in user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get profile
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: List users
      parameters:
      - description: search by email address
        format: email
        in: query
        name: user_email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Item'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: User data
        in: body
        name: data
        schema:
          $ref: '#/definitions/app.createUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Creat user
      tags:
      - user
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by id.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.User'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get user
      tags:
      - user
  /users/{id}/items:
    get:
      consumes:
      - application/json
      description: List items by user email.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.Item'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get items
      tags:
      - item
    post:
      consumes:
      - application/json
      description: Create a new item.
      parameters:
      - description: User data
        in: body
        name: data
        schema:
          $ref: '#/definitions/app.createItemInput'
      - description: User ID
        format: uuid
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Item'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create item
      tags:
      - item
  /workspaces:
    get:
      consumes:
      - application/json
      description: Get all workspaces.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.Workspace'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get workspaces
      tags:
      - workspace
    post:
      consumes:
      - application/json
      description: Create a new workspace.
      parameters:
      - description: Workspace data
        in: body
        name: data
        schema:
          $ref: '#/definitions/app.createWorkspaceInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Workspace'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Creat workspace
      tags:
      - workspace
  /workspaces/{id}:
    get:
      consumes:
      - application/json
      description: Get workspace by id.
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Workspace'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get workspace
      tags:
      - workspace
  /workspaces/{id}/users:
    get:
      consumes:
      - application/json
      description: Get all users.
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all users
      tags:
      - user
swagger: "2.0"
